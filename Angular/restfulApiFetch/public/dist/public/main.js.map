{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"* {\\n    font-weight: bold;\\n}\\n#container {\\n    padding: 1rem;\\n    text-align: center;\\n    border: .3rem solid #F7A402;\\n    border-radius: .5rem;\\n}\\n#btndiv {\\n    padding: 1rem;\\n    border: .3rem solid blue;\\n    border-radius: .5rem;\\n}\\n#gatbtn {\\n    padding: .5rem;\\n    color: white;\\n    background-color: #9C28B0;\\n    border-radius: .5rem;\\n}\\n#showbtn {\\n    width: 4rem;\\n    height: 4rem;\\n    margin: .5rem;\\n    color: white;\\n    background-color: #2C9687;\\n    border-radius: 15rem;\\n}\\n/* #info {\\n    padding: 1rem;\\n    border: .3rem solid green;\\n    border-radius: .5rem;\\n}\\n#task {\\n    width: 25rem;\\n    margin: 0.35rem;\\n    border: 1px solid black;\\n    background-color: #F5F5F5;\\n}\\n#create {\\n    color: white;\\n    background-color: #899CAE;\\n}\\n#edit {\\n    color: white;\\n    background-color: #899CAE;\\n}\\n#edit2 {\\n    color: white;\\n    background-color: #899CAE;\\n    margin-right: 24.75rem;\\n}\\n#delete {\\n    color: white;\\n    background-color: #DFBEBE;\\n}\\n#leftpanel {\\n    display: inline-block;\\n    vertical-align: top;\\n    width: 45rem;\\n}\\n#rightpanel {\\n    display: inline-block;\\n    width: 45rem;\\n}\\n#top {\\n    margin-left: 2.85rem;\\n}\\n.fields {\\n    width: 20rem;\\n}\\n.btn {\\n    float: right;\\n    width: 5rem;\\n    margin: .35rem;\\n} */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLG9CQUFvQjtBQUN4QjtBQUNBO0lBQ0ksYUFBYTtJQUNiLHdCQUF3QjtJQUN4QixvQkFBb0I7QUFDeEI7QUFDQTtJQUNJLGNBQWM7SUFDZCxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLG9CQUFvQjtBQUN4QjtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixhQUFhO0lBQ2IsWUFBWTtJQUNaLHlCQUF5QjtJQUN6QixvQkFBb0I7QUFDeEI7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0ErQ0ciLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIioge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuI2NvbnRhaW5lciB7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyOiAuM3JlbSBzb2xpZCAjRjdBNDAyO1xuICAgIGJvcmRlci1yYWRpdXM6IC41cmVtO1xufVxuI2J0bmRpdiB7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBib3JkZXI6IC4zcmVtIHNvbGlkIGJsdWU7XG4gICAgYm9yZGVyLXJhZGl1czogLjVyZW07XG59XG4jZ2F0YnRuIHtcbiAgICBwYWRkaW5nOiAuNXJlbTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzlDMjhCMDtcbiAgICBib3JkZXItcmFkaXVzOiAuNXJlbTtcbn1cbiNzaG93YnRuIHtcbiAgICB3aWR0aDogNHJlbTtcbiAgICBoZWlnaHQ6IDRyZW07XG4gICAgbWFyZ2luOiAuNXJlbTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDOTY4NztcbiAgICBib3JkZXItcmFkaXVzOiAxNXJlbTtcbn1cbi8qICNpbmZvIHtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIGJvcmRlcjogLjNyZW0gc29saWQgZ3JlZW47XG4gICAgYm9yZGVyLXJhZGl1czogLjVyZW07XG59XG4jdGFzayB7XG4gICAgd2lkdGg6IDI1cmVtO1xuICAgIG1hcmdpbjogMC4zNXJlbTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGNUY1O1xufVxuI2NyZWF0ZSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4OTlDQUU7XG59XG4jZWRpdCB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM4OTlDQUU7XG59XG4jZWRpdDIge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODk5Q0FFO1xuICAgIG1hcmdpbi1yaWdodDogMjQuNzVyZW07XG59XG4jZGVsZXRlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0RGQkVCRTtcbn1cbiNsZWZ0cGFuZWwge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgIHdpZHRoOiA0NXJlbTtcbn1cbiNyaWdodHBhbmVsIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDQ1cmVtO1xufVxuI3RvcCB7XG4gICAgbWFyZ2luLWxlZnQ6IDIuODVyZW07XG59XG4uZmllbGRzIHtcbiAgICB3aWR0aDogMjByZW07XG59XG4uYnRuIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgd2lkdGg6IDVyZW07XG4gICAgbWFyZ2luOiAuMzVyZW07XG59ICovIl19 */\"","module.exports = \"<!-- The content below is only a placeholder and can be replaced.\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n  {{ title }}!\\n  </h1>    \\n Create -->\\n    <!-- <form (submit)=\\\"onSubmit()\\\" class=\\\"postForm\\\">\\n      <p>{{newTask | json}}</p>\\n      <label>Task title:\\n        <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]=\\\"newTask.title\\\"/>\\n      </label>\\n      <label>Task description:\\n          <input type=\\\"text\\\" name=\\\"newTask.description\\\" [(ngModel)]=\\\"newTask.description\\\"/>\\n      </label>\\n      <input type=\\\"submit\\\" value=\\\"Create Task\\\"/>\\n    </form> -->\\n  <!-- Read -->\\n  <!-- <div style=\\\"border: 1px solid black\\\">\\n    <app-task *ngIf=\\\"selectedTask\\\" [taskToShow]=\\\"selectedTask\\\"></app-task> \\n    <button (click)=\\\"onButtonClick()\\\">All the Tasks</button>\\n    <div *ngFor=\\\"let task of tasks; let idx = index\\\">\\n      <p>{{ task.title }}</p>\\n      <button (click)=\\\"info(idx)\\\">SHOW</button>\\n    </div>\\n    <hr>\\n    <div>\\n      <p>{{ task?.title }}</p>\\n      <p>{{ task?.description }}</p>\\n      <button (click)=\\\"editTask(task)\\\">EDIT</button>\\n      <button (click)=\\\"delete(task)\\\">DELETE</button>\\n    </div>    \\n  </div> -->\\n  <!-- Update -->\\n  <!-- <div *ngIf = \\\"edit\\\">\\n      <h2>Edit a Task</h2>\\n      <p>{{editTask | json}}</p>\\n      <form (submit)=\\\"editSubmit(task._id)\\\">\\n        <p>Title:\\n          <input type=\\\"text\\\" name=\\\"edit.title\\\" [(ngModel)]=\\\"edit.title\\\" />\\n        </p>\\n        <p>Description:\\n          <input type=\\\"text\\\" name=\\\"edit.description\\\" [(ngModel)]=\\\"edit.description\\\" />\\n          <input type=\\\"submit\\\" value=\\\"Edit\\\" />\\n        </p>\\n      </form>\\n    </div>\\n\\n  </div>  -->\\n  <div style=\\\"text-align:center\\\">\\n    <h1>Restful Tasks CRUD</h1>\\n    <div>\\n      <h3>New Task</h3>\\n      <form (submit)=\\\"onSubmit()\\\">\\n        <p>{{ newTask | json }}</p>\\n        title: <input [(ngModel)]=\\\"newTask.title\\\" name=\\\"newTask.title\\\" type=\\\"text\\\" /><br>\\n        Description: <input [(ngModel)]=\\\"newTask.description\\\" name=\\\"newTask.description\\\" type=\\\"text\\\"/><br>\\n        <input type=\\\"submit\\\" value=\\\"Create Task\\\">\\n      </form>\\n    </div>\\n  \\n  \\n    <div>\\n      <h1>Show all Tasks</h1>\\n      <button (click)=\\\"onbtnShowAll()\\\">Get All Tasks</button>\\n      <div *ngIf=\\\"tasks\\\">\\n        <div *ngFor=\\\"let task of tasks\\\">\\n          <p>{{task.title}}</p>\\n          <p>{{task.description}}</p>\\n          <button (click)=\\\"onbtnEdit(task)\\\">Edit</button>\\n          <button (click)=\\\"onbtnDelete(task._id)\\\">Delete</button>\\n        </div>\\n        <div *ngIf = \\\"selectedTask\\\">\\n          <!-- <p>{{selectedTask | json }}</p> -->\\n          <form (submit)=\\\"onbtnUpdate(selectedTask)\\\">\\n            Title: <input [(ngModel)]=\\\"selectedTask.title\\\" name=\\\"selectedTask.title\\\" type=\\\"text\\\"/><br>\\n            Description: <input [(ngModel)]=\\\"selectedTask.description\\\" name=\\\"selectedTask.description\\\" type=\\\"text\\\" /><br>\\n            <input type=\\\"submit\\\" value=\\\"update\\\" />\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  \\n    \\n    <!------- This section is Restful Tasks Interactive assignment ----->\\n    \\n    <h1>Restful Tasks Interactive</h1>\\n    <button (click)=\\\"onbtnShowAll()\\\">Get All Tasks</button>\\n      <div *ngIf=\\\"tasks\\\">\\n        <div *ngFor=\\\"let task of tasks\\\">\\n          <p>{{task.title}} <button (click)=\\\"onbtnShowDesc(task._id)\\\">Show Desc!</button></p>\\n        </div>\\n      </div>\\n      <div *ngIf='mytask'>\\n        <p>---------------- display info -------------------</p>\\n        <p>{{mytask.title}}</p>\\n        <p>{{mytask.description}}</p>\\n        <p>---------------------------------------------------</p>\\n      </div>\\n  \\n    <!----------- End Restful Tasks Interactive section --------------->\\n  \\n  </div>\\n\\n\\n\\n<!-- <router-outlet></router-outlet> -->\\n\"","// import { Component, OnInit } from '@angular/core';\n// import { HttpService } from './http.service';\n// import { observable } from 'rxjs';\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent implements OnInit {\n//   title = 'Restful Tasks API'; \n//   tasks: any = []; \n//   task ={};\n//   newTask: any;\n//   editTask: any;\n  \n\n//   constructor(private _httpService: HttpService){\n//   }\n// ngOnInit(){\n//   this.onButtonClick();\n//   this.newTask = {title: \"\", description: \"\"}\n//   // this.editSubmit = {title: \"\", description: \"\"}\n// }\n\n// onSubmit(){\n//   let obs = this._httpService.addTask(this.newTask);\n//   obs.subscribe(data =>{\n//     console.log(data);\n//     this.newTask = {title: \"\", description: \"\"};\n//   })\n// }\n\n// onButtonClick(){\n//   let obs = this._httpService.getTasks();\n//   obs.subscribe(data => {\n//     this.tasks = data;\n//   })\n// }\n// info(idx){\n//   this.task = this.tasks[idx];\n//   console.log(this.task);\n  \n// }\n// edit(selectedTask) {\n//   console.log(selectedTask);\n//   const observable = this._httpService.editTask(selectedTask._id, this.editTask);\n//   observable.subscribe(data => {\n//     console.log('Got data from put back!', data);\n//     this.editSubmit(selectedTask);\n   \n//   });\n// }\n// editSubmit(selectedTask) {\n//   let obs = this._httpService.editTask(selectedTask, this.editTask);\n//   obs.subscribe(data =>{\n//     console.log(data);\n//     this.editTask = { title: \"\", description: \"\"};\n//    })\n//   //  this.editTask = {title: \"\", description: \"\"};\n// }\n\n//   delete(id) {\n//     const observable =  this._httpService.deleteTask(id);\n//     observable.subscribe(data => {\n//       console.log('Removed the task');\n//       this.onButtonClick();\n//       this.task = {};\n//     });\n// }\n// }\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  tasks = [];\n  mytask: any;\n  newTask: any;\n  selectedTask: any;\n  constructor(private _httpService: HttpService){}\n  ngOnInit(){\n    this.newTask = {title:\"\", description:\"\"};\n  }\n\n  onbtnShowAll(){\n    let obs = this._httpService.getTasks();\n    obs.subscribe(data=>{\n      this.tasks = data['task'];\n    })\n  }\n  onbtnShowDesc(id){\n      console.log('this is task : ',id);\n      let obs = this._httpService.getOneTask(id);\n      obs.subscribe(data=>{\n        console.log(\"Got a Task from DB serach by ID\", data);\n        this.mytask = data['task'];\n      })\n    }\n  \n  onSubmit(){\n    console.log('click submit')\n    let obs = this._httpService.addTask(this.newTask);\n    obs.subscribe(data=> {\n      console.log(\"Got data from post back\", data);\n      //after adding new task, then clear newTask\n      this.newTask = {title:'', description:''};\n    })\n  }\n  //click then show edit section\n  onbtnEdit(task){\n    this.selectedTask = task;\n  }\n  //submit changes to DB\n  onbtnUpdate(task){\n    let obs = this._httpService.updateTask(task);\n    obs.subscribe(data=>{\n      console.log(\"Got response data from edit \", data);\n      this.selectedTask = {title: \"\", description:\"\"};\n    })\n    //execute method in order to get all updated tasks display on screen\n    this.onbtnShowAll();\n  }\n\n  //Delete task by id\n  onbtnDelete(id){\n    console.log('clicke delete button');\n    let obs = this._httpService.deleteTask(id);\n    obs.subscribe(data=>{\n      console.log(\"Got del response from DB\", data);\n    })\n    this.onbtnShowAll();\n  }\n}\n","// import { BrowserModule } from '@angular/platform-browser';\n// import { NgModule } from '@angular/core';\n// import { HttpClientModule } from '@angular/common/http';\n// import { AppRoutingModule } from './app-routing.module';\n// import { AppComponent } from './app.component';\n// import { HttpService } from './http.service';\n// import { FormsModule } from '@angular/forms';\n// import { TaskComponent } from './task/task.component';\n// @NgModule({\n//   declarations: [\n//     AppComponent,\n//     TaskComponent\n//   ],\n//   imports: [\n//     BrowserModule,\n//     AppRoutingModule,\n//     HttpClientModule,\n//     FormsModule,\n//   ],\n//   providers: [HttpService],\n//   bootstrap: [AppComponent]\n// })\n// export class AppModule { }\n\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule} from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { FormsModule} from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, HttpClientModule,FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","// import { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class HttpService {\n//   constructor(private _httpClient: HttpClient) { \n    \n//   }\n//   getTasks(){\n//     return this._httpClient.get('/tasks');\n//   }\n//   addTask(newTask){\n//     return this._httpClient.post('/tasks', newTask)\n//   }\n//   deleteTask(id) {\n//     return this._httpClient.delete('/tasks/' + id);\n//   }\n//   editTask(id, editTask) {\n//     return this._httpClient.put('/tasks/' + id, editTask);\n//   }\n// }\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n  getTasks(){\n    return this._http.get('/tasks');\n  }\n  addTask(newTask){\n    return this._http.post('/tasks', newTask);\n  }\n  updateTask(task){\n    return this._http.put('/tasks/'+task._id, task);\n  }\n  deleteTask(id){\n    console.log('arrived to deletetask service',id);\n    return this._http.delete('/tasks/'+id);\n  }\n  getOneTask(id){\n    console.log('get a task by ID', id);\n    return this._http.get('/tasks/'+id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}