1. Have the NodeJS server render views/index.ejs that has the html content for 
    the client whenever the client requests "/"

    routings/index.js

    app.get("/", function(req, res){
        res.render('index', {});
    });

2. In the client codes, have a javascript code that asks the user for their name. 
    Store the user input in a variable called name

    <script>
        var name = prompt("what is your name?');
    </script>

3. Have the client EMIT to the server an event called "got_a_new_user" and pass 
    'name' to the server.
    <script>
        var name = prompt("what is your name?');
        io = io.connect();
        io.emit('got_a_new_user', {name: name})
    </script>

4. Have the server LISTEN for an event called "got_a_new_user". When this event 
    gets triggered, have the server BROADCAST an event called 'new_user' to 
    the client with the name of the new user attached to the event.

    app.io.route('got_a_new_user', function(req){
        app.io.broadcast('new_user', {new_user_name: req.data.name});
    });

    4.2. we store the name/session_id of the new user in a variable/array/hash 
        called users,

        var users = {};
    
    4.3. to the person who sent the request, we EMIT an event called 
        'existing_users' with all the users data.

        app.io.route('got_a_new_user', function(req){
            app.io.broadcast('new_user, {new_user_name: req.data.name});
        })

5. Have the client LISTEN for an event called 'new_user' and when this event 
    gets triggered, have jQuery render a new box with the new user's name.
    <script>
        var name = prompt("what is your name?');
        io = io.connect();
        io.emit('got_a_new_user', {name: name})
        io.on('new_user', function(data){

        })
    </script>


6. Have the server listen for an event called disconnect, and when this occurs, 
    BROADCAST to all the clients an event 'disconnect_user' with some data 
    (name of the disconnected user) (NOTE well need to pass sessionID or 
    something else to identify the user)
7. We need to have the client LISTEN for an event called 'disconnect_user' and 
    remove any html box associated with this user.